[comment encoding = UTF-8 /]
[**
 * The documentation of the module generateDialogClass.
 */]
[module generateDialogClass('http://www.example.org/multiactivity')]
[import pje20::androidapp::multiactivity::multiactivitymetamodel::gen::java::files::getterTemplate /]


[**
 * The documentation of the template generateElement.
 * @param anApplication
 */]
[template public createDialogPopUpClass(anApplication : Application) ? (self.eAllContents(PopupMessageButton) -> notEmpty())]
[file ('java/pje20/androidapp/app1/popup/HelloWorldDialogFragment.java', false, 'UTF-8')]
	
	package pje20.androidapp.app1.popup;

	import android.app.AlertDialog;
	import android.app.Dialog;
	import android.content.DialogInterface;
	import android.os.Bundle;
	
	import androidx.annotation.NonNull;
	import androidx.annotation.Nullable;
	import androidx.fragment.app.DialogFragment;
	
	public class HelloWorldDialogFragment extends DialogFragment {
	    private String mActivityName;
	    public HelloWorldDialogFragment(String name){
	        mActivityName = name;
	    }
	    @NonNull
	    @Override
	    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
	        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
	        builder.setTitle("Helloo")
	                .setMessage("" + getActivityName())
	                .setPositiveButton("ok", new DialogInterface.OnClickListener() {
	                    @Override
	                    public void onClick(DialogInterface dialog, int which) {
	                        
	                    }
	                });
	
	        //return super.onCreateDialog(savedInstanceState);
	        return builder.create();
	    }
	
	    public String getActivityName() {
	        return mActivityName;
	    }
	
	    public void setActivityName(String activityName) {
	        mActivityName = activityName;
	    }
	}
[/file]
[/template]

[template public generateAddDialogFragment(anApp : Application)]
[file (anApp.getParticularClassPackagePath() + 'AddDialogFragment.java', false, 'UTF-8')]
	private  TodoNoticeDialogListener listener;
    @NonNull
    @Override
    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
        LayoutInflater inflater = requireActivity().getLayoutInflater();
        builder.setView(inflater.inflate(R.layout.add_new_todo_layout,null))
                .setPositiveButton(R.string.add_todo, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        EditText edt = (EditText) getDialog().findViewById(R.id.add_todo_title);
                        listener.onDialogPositiveClick(AddTodoDialogFragment.this);



                    }
                })
                .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        AddTodoDialogFragment.this.getDialog().cancel();
                    }
                });
        return builder.create();
    }

    public interface TodoNoticeDialogListener{
        public void  onDialogPositiveClick(DialogFragment dialog);
    }

    @Override
    public void onAttach(@NonNull Context context) {
        super.onAttach(context);
        try {
            listener = (TodoNoticeDialogListener) context;
        } catch (ClassCastException e) {
            throw new ClassCastException(getActivity().toString() + "must implement NoticeDialogListener");
        }
    }
}

[/file]



[/template]


